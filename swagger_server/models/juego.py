# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Juego(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id_juego: str=None, precio: int=None, cantidad: int=None):  # noqa: E501
        """Juego - a model defined in Swagger

        :param id_juego: The id_juego of this Juego.  # noqa: E501
        :type id_juego: str
        :param precio: The precio of this Juego.  # noqa: E501
        :type precio: int
        :param cantidad: The cantidad of this Juego.  # noqa: E501
        :type cantidad: int
        """
        self.swagger_types = {
            'id_juego': str,
            'precio': int,
            'cantidad': int
        }

        self.attribute_map = {
            'id_juego': 'idJuego',
            'precio': 'precio',
            'cantidad': 'cantidad'
        }
        self._id_juego = id_juego
        self._precio = precio
        self._cantidad = cantidad

    @classmethod
    def from_dict(cls, dikt) -> 'Juego':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Juego of this Juego.  # noqa: E501
        :rtype: Juego
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_juego(self) -> str:
        """Gets the id_juego of this Juego.


        :return: The id_juego of this Juego.
        :rtype: str
        """
        return self._id_juego

    @id_juego.setter
    def id_juego(self, id_juego: str):
        """Sets the id_juego of this Juego.


        :param id_juego: The id_juego of this Juego.
        :type id_juego: str
        """
        if id_juego is None:
            raise ValueError("Invalid value for `id_juego`, must not be `None`")  # noqa: E501

        self._id_juego = id_juego

    @property
    def precio(self) -> int:
        """Gets the precio of this Juego.


        :return: The precio of this Juego.
        :rtype: int
        """
        return self._precio

    @precio.setter
    def precio(self, precio: int):
        """Sets the precio of this Juego.


        :param precio: The precio of this Juego.
        :type precio: int
        """
        if precio is None:
            raise ValueError("Invalid value for `precio`, must not be `None`")  # noqa: E501

        self._precio = precio

    @property
    def cantidad(self) -> int:
        """Gets the cantidad of this Juego.


        :return: The cantidad of this Juego.
        :rtype: int
        """
        return self._cantidad

    @cantidad.setter
    def cantidad(self, cantidad: int):
        """Sets the cantidad of this Juego.


        :param cantidad: The cantidad of this Juego.
        :type cantidad: int
        """
        if cantidad is None:
            raise ValueError("Invalid value for `cantidad`, must not be `None`")  # noqa: E501

        self._cantidad = cantidad
